# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2018-08-23 01:45
from __future__ import unicode_literals

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(help_text='登录名', max_length=32, unique=True, verbose_name='登录名')),
                ('email', models.EmailField(help_text='邮箱地址', max_length=255, verbose_name='邮箱')),
                ('is_department_manager', models.BooleanField(default=False, help_text='是否是部门管理员（组长）', verbose_name='是否是部门管理员（组长）')),
                ('is_public', models.BooleanField(default=0, help_text='是否有权限访问公共接口')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='权限名称', max_length=255, verbose_name='权限名称')),
                ('manage_item', models.BooleanField(default=False, help_text='管理权限', verbose_name='管理权限')),
                ('operation', models.BooleanField(default=False, help_text='操作权限', verbose_name='操作权限')),
                ('enabled', models.BooleanField(default=True, help_text='权限是否可用', verbose_name='权限是否可用')),
                ('codename', models.IntegerField(help_text='如果是导航权限请以10000开始编号,如果是页面权限以40000开始编号', verbose_name='权限ID')),
                ('is_dir', models.BooleanField(default=False, help_text='是否为目录菜单', verbose_name='是否为目录菜单')),
                ('level', models.IntegerField(help_text='菜单层级', null=True, verbose_name='菜单层级')),
                ('rank', models.IntegerField(help_text='层级排序', null=True, verbose_name='层级排序')),
                ('parent', models.ForeignKey(blank=True, help_text='父导航页面', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='myauth.DepartmentPermissions', verbose_name='父导航')),
            ],
            options={
                'verbose_name': '用户权限',
                'verbose_name_plural': '用户权限',
                'ordering': ('codename',),
            },
        ),
        migrations.CreateModel(
            name='ModulePermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': (('sites.site', '网站'), ('information.examinfo', '资讯管理-考试信息'), ('information.memberschool', '资讯管理-会员学校'), ('school.school', '学校管理-学校管理'), ('course.course', '课程管理-课程管理'), ('student.student', '学生管理-学生管理'), ('exam.exam', '考务管理-考试管理'), ('exam.room', '考务管理-考场管理')),
            },
        ),
        migrations.AlterUniqueTogether(
            name='departmentpermissions',
            unique_together=set([('codename',)]),
        ),
    ]
